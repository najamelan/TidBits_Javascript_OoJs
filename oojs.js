var OoJsNamespace="undefined"===typeof global?window:global;
(function(g){function h(){this.own={_public:{},_protected:{},_virtual:{},_virtualize:null}}function k(a,c,e,b){this.Class=g[a];this.Static=e;this.baseName=c;this.Base=g[c];this.IFace=b;this.className=a;this.props=new h;this.instances=[]}function r(a,c){function e(){}function b(){}var d=g[a];d.toString=function(){return"function "+a+"()"};b.toString=function(){return"function Static(){ /*"+a+"*/ }"};"undefined"!==typeof c&&(d.prototype=Object.create(g[c].prototype));d.prototype.constructor=d;d.prototype.Public=
s;d.prototype.Protected=t;d.prototype._static=b;e.prototype=Object.create(d.prototype);e.prototype.constructor=d;b.prototype=Object.create(d.prototype);b.prototype.constructor=d;Object.defineProperty(b,"_meta",{writable:!1,enumerable:!1,value:new k(a,c,b,e)});"undefined"!==typeof n[c]&&(b._meta._inherit=function(a){w.call(a,n[c])});b._iFace=d;b.Public=s;b.Protected=t;b._static=b;n[a]=b._meta;return b}function s(){return p._meta._accessModifier.call(this,arguments,this._static._meta,"public")}function t(){p._meta._accessModifier.call(this,
arguments,this._static._meta,"protected")}function w(a){switch(typeof this){case "function":this._meta.props.inherit=a.props.own;break;case "object":"undefined"===typeof this._super&&(this._super=new a.Class),a=a.instances[this._super._uuid],this._meta.props.inherit="undefined"!==typeof a&&"undefined"!==a.props?a._meta.props.own:(new h).own}}function u(a,c,e,b){for(var d=a.length-1;0<=d;--d){var f=a[d],g=!0,l;switch(typeof f){case "function":f=/\W*function\W+([\w\$]+)\(/.exec(f.toString())[1];l=a[d];
g=!0;break;case "string":l=this[f];g=!0;break;default:throw new TypeError("The second parameter and onewards of Public/Protected should be either valid function references or strings. You passed: "+f);}for(var h=[c,e],m=1;0<=m;--m)"undefined"===typeof l&&"undefined"!==typeof h[m][f]&&(l=h[m][f],g=!1),delete h[m][f];if("undefined"===typeof l)throw Error("Couldn't find an implementation for property: "+f+" that you wanted to make public/protected. In class: "+this._meta.className);v(this,f,l,b,g)}for(var k in c)v(this,
k,c[k],b,!1)}function x(a,c){return function(){return a.apply(c,arguments)}}function v(a,c,e,b,d){switch(typeof e){case "function":a[c]=e;for(var f=b.length-1;0<=f;--f)b[f][c]=d?x(e,a):e;break;case "string":case "number":case "boolean":case "object":b.push(a);for(a=b.length-1;0<=a;--a)Object.defineProperty(b[a],c,q(e));break;default:throw new TypeError("Can only make methods or objects public/protected. It is not possible with primitive values. You tried share: "+name);}}function q(a){var c=q.d||
(q.d={writable:!1,enumerable:!0,configurable:!0,value:null});c.value=a;return c}g.OoJs=function(){return null};var n={};h.prototype.inherit=null;k.prototype={_accessModifier:function(a,c,e){this._meta||(this._meta=new k(c.Class,c.baseName,c.Static,c.IFace));var b=this._meta.props;"undefined"===typeof c._inherit?this._meta.props.inherit=(new h).own:b.inherit||c._inherit(this);if("public"===e)return"object"===typeof this&&(this._iFace=new c.IFace,this._iFace._uuid=Math.random(),c.instances[this._iFace._uuid]=
this),u.call(this,a,b.inherit._public,b.inherit._protected,[b.own._public,this._iFace]),this._iFace;u.call(this,a,b.inherit._protected,b.inherit._public,[b.own._protected])}};var p=r("OoJs");p._meta.Class.setupClass=r})(OoJsNamespace);"undefined"!==typeof module&&(module.exports.OoJs=OoJs);
